{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/github/ifood-frontend-test/ifood-frontend/src/components/input.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useField } from \"@unform/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Wrapper } from \"./styles\";\nexport default function Input({\n  name,\n  value,\n  onChange,\n  ...rest\n}) {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: \"value\"\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    className: \"input\",\n    inputRef: inputRef,\n    value: value,\n    onChange: onChange,\n    defaultValue: defaultValue\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/gabriel/github/ifood-frontend-test/ifood-frontend/src/components/input.js"],"names":["React","useEffect","useRef","useField","TextField","Wrapper","Input","name","value","onChange","rest","inputRef","fieldName","registerField","defaultValue","error","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,OAAT,QAAwB,UAAxB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyB,KAAGC;AAA5B,CAAf,EAAmD;AAChE,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA;AAA1C,MAAoDZ,QAAQ,CAACI,IAAD,CAAlE;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAAC;AACZN,MAAAA,IAAI,EAAEK,SADM;AAEZI,MAAAA,GAAG,EAAEL,QAAQ,CAACM,OAFF;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACN,SAAD,EAAYC,aAAZ,CANM,CAAT;AAQA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,uDACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,QAAQ,EAAEF,QAFZ;AAGE,IAAA,KAAK,EAAEH,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,YAAY,EAAEK;AALhB,KAMMJ,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAcD","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useField } from \"@unform/core\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Wrapper } from \"./styles\";\n\nexport default function Input({ name, value, onChange, ...rest }) {\n  const inputRef = useRef(null);\n  const { fieldName, registerField, defaultValue, error } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: \"value\",\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Wrapper>\n      <>\n        <TextField\n          className=\"input\"\n          inputRef={inputRef}\n          value={value}\n          onChange={onChange}\n          defaultValue={defaultValue}\n          {...rest}\n        />\n      </>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}