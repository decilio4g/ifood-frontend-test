{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/github/ifood-frontend-test/ifood-frontend/src/components/select.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useField } from \"@unform/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function SelectInput({\n  locale,\n  name,\n  value,\n  onChange,\n  ...rest\n}) {\n  const classes = useStyles();\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: \"value\"\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, locale.name), /*#__PURE__*/React.createElement(Select, Object.assign({\n    labelId: \"demo-simple-select-outlined-label\",\n    value: value,\n    onChange: onChange,\n    label: \"Age\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), locale.values.map(locale => /*#__PURE__*/React.createElement(MenuItem, {\n    key: locale.value,\n    value: locale.value || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, locale.name))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, locale.name), /*#__PURE__*/React.createElement(Select, Object.assign({\n    labelId: \"demo-simple-select-outlined-label\",\n    value: value,\n    onChange: onChange,\n    label: \"Age\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), locale.values.map(locale => /*#__PURE__*/React.createElement(MenuItem, {\n    key: locale.value,\n    value: locale.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, locale.name))))));\n}","map":{"version":3,"sources":["/home/gabriel/github/ifood-frontend-test/ifood-frontend/src/components/select.js"],"names":["React","useEffect","useRef","useField","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SelectInput","locale","name","value","onChange","rest","classes","inputRef","fieldName","registerField","defaultValue","error","ref","current","path","values","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useField } from \"@unform/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SelectInput({\n  locale,\n  name,\n  value,\n  onChange,\n  ...rest\n}) {\n  const classes = useStyles();\n  const inputRef = useRef(null);\n  const { fieldName, registerField, defaultValue, error } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: \"value\",\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <>\n      {error ? (\n        <>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              {locale.name}\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              value={value}\n              onChange={onChange}\n              label=\"Age\"\n              {...rest}\n            >\n              {locale.values.map((locale) => (\n                <MenuItem key={locale.value} value={locale.value || \"\"}>\n                  {locale.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </>\n      ) : (\n        <>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              {locale.name}\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              value={value}\n              onChange={onChange}\n              label=\"Age\"\n              {...rest}\n            >\n              {locale.values.map((locale) => (\n                <MenuItem key={locale.value} value={locale.value}>\n                  {locale.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}